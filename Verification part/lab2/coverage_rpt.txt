Coverage Report by instance with details

=================================================================================
=== Instance: /counter_tb/DUT
=== Design Unit: work.counter
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10        10         0   100.00%

================================Branch Details================================

Branch Coverage for instance /counter_tb/DUT

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File counter.v
------------------------------------IF Branch------------------------------------
    21                                        68     Count coming in to IF
    21              1                         10         if (!rst_n)
    23              1                         11         else if (!load_n)
    25              1                         11         else if (ce)
                                              36     All False Count
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    26                                        11     Count coming in to IF
    26              1                          5             if (up_down)
    28              1                          6             else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    32                                        19     Count coming in to IF
    32              1                          5     assign max_count = (count_out == {WIDTH{1'b1}})? 1:0;
    32              2                         14     assign max_count = (count_out == {WIDTH{1'b1}})? 1:0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    33                                        19     Count coming in to IF
    33              1                          5     assign zero = (count_out == 0)? 1:0;
    33              2                         14     assign zero = (count_out == 0)? 1:0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         2         0   100.00%

================================Condition Details================================

Condition Coverage for instance /counter_tb/DUT --

  File counter.v
----------------Focused Condition View-------------------
Line       32 Item    1  (count_out == {4{{1}}})
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (count_out == {4{{1}}})         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (count_out == {4{{1}}})_0  -                             
  Row   2:          1  (count_out == {4{{1}}})_1  -                             

----------------Focused Condition View-------------------
Line       33 Item    1  (count_out == 0)
Condition totals: 1 of 1 input term covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (count_out == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count_out == 0)_0    -                             
  Row   2:          1  (count_out == 0)_1    -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       7         7         0   100.00%

================================Statement Details================================

Statement Coverage for instance /counter_tb/DUT --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File counter.v
    8                                                module counter (clk ,rst_n, load_n, up_down, ce, data_load, count_out, max_count, zero);
    9                                                parameter WIDTH = 4;
    10                                               input clk;
    11                                               input rst_n;
    12                                               input load_n;
    13                                               input up_down;
    14                                               input ce;
    15                                               input [WIDTH-1:0] data_load;
    16                                               output reg [WIDTH-1:0] count_out;
    17                                               output max_count;
    18                                               output zero;
    19                                               
    20              1                         68     always @(posedge clk) begin
    21                                                   if (!rst_n)
    22              1                         10             count_out <= 0;
    23                                                   else if (!load_n)
    24              1                         11             count_out <= data_load;
    25                                                   else if (ce)
    26                                                       if (up_down)
    27              1                          5                 count_out <= count_out + 1;
    28                                                       else 
    29              1                          6                 count_out <= count_out - 1;
    30                                               end
    31                                               
    32              1                         20     assign max_count = (count_out == {WIDTH{1'b1}})? 1:0;
    33              1                         20     assign zero = (count_out == 0)? 1:0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         30        29         1    96.66%

================================Toggle Details================================

Toggle Coverage for instance /counter_tb/DUT --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                                ce           1           1      100.00 
                                               clk           1           1      100.00 
                                    count_out[3-0]           1           1      100.00 
                                    data_load[0-3]           1           1      100.00 
                                            load_n           1           1      100.00 
                                         max_count           1           1      100.00 
                                             rst_n           0           1       50.00 
                                           up_down           1           1      100.00 
                                              zero           1           1      100.00 

Total Node Count     =         15 
Toggled Node Count   =         14 
Untoggled Node Count =          1 

Toggle Coverage      =      96.66% (29 of 30 bins)

=================================================================================
=== Instance: /counter_tb
=== Design Unit: work.counter_tb
=================================================================================

Assertion Coverage:
    Assertions                       6         6         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/counter_tb/#ublk#95084642#115/immed__116
                     counter_tb.sv(116)                 0          1
/counter_tb/#ublk#95084642#128/immed__129
                     counter_tb.sv(129)                 0          1
/counter_tb/#ublk#95084642#141/immed__142
                     counter_tb.sv(142)                 0          1
/counter_tb/#ublk#95084642#152/immed__153
                     counter_tb.sv(153)                 0          1
/counter_tb/#ublk#95084642#168/immed__169
                     counter_tb.sv(169)                 0          1
/counter_tb/#ublk#95084642#179/immed__180
                     counter_tb.sv(180)                 0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        24        18         6    75.00%

================================Branch Details================================

Branch Coverage for instance /counter_tb
NOTE: The modification timestamp for source file 'counter_tb.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File counter_tb.sv
------------------------------------IF Branch------------------------------------
    57                                       101     Count coming in to IF
    57              1                         11             if (!rst_n) begin
    59              1                         14             end else if (!load_n) begin
    61              1                         11             end else if (ce) begin
                                              65     All False Count
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    62                                        11     Count coming in to IF
    62              1                          5                 if (up_down) begin
    64              1                          6                 end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    75                                        92     Count coming in to IF
    75              1                    ***0***             if (count_out !== golden_count_out) begin
                                              92     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    80                                        92     Count coming in to IF
    80              1                    ***0***             if (max_count !== golden_max_count) begin
                                              92     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    85                                        92     Count coming in to IF
    85              1                    ***0***             if (zero !== golden_zero) begin
                                              92     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    90                                        92     Count coming in to IF
    90              1                         92             if (local_error_count == 0) begin
    93              1                    ***0***             end else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    120                                       10     Count coming in to IF
    120             1                          8                 if (~load_n) begin
                                               2     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    133                                       10     Count coming in to IF
    133             1                          8                 if (ce) begin
                                               2     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    157                                       50     Count coming in to IF
    157             1                    ***0***                 if (max_count) begin
                                              50     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    160                                       50     Count coming in to IF
    160             1                         50                 if (zero) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    184                                       10     Count coming in to IF
    184             1                          5                 if (~load_n & ce) begin
                                               5     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       6         2         4    33.33%

================================Condition Details================================

Condition Coverage for instance /counter_tb --
NOTE: The modification timestamp for source file 'counter_tb.sv' has been altered since compilation.

  File counter_tb.sv
----------------Focused Condition View-------------------
Line       75 Item    1  (count_out !== golden_count_out)
Condition totals: 0 of 1 input term covered = 0.00%

                        Input Term   Covered  Reason for no coverage   Hint
                       -----------  --------  -----------------------  --------------
  (count_out !== golden_count_out)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                          Non-masking condition(s)      
 ---------  ---------  --------------------                -------------------------     
  Row   1:          1  (count_out !== golden_count_out)_0  -                             
  Row   2:    ***0***  (count_out !== golden_count_out)_1  -                             

----------------Focused Condition View-------------------
Line       80 Item    1  (max_count !== golden_max_count)
Condition totals: 0 of 1 input term covered = 0.00%

                        Input Term   Covered  Reason for no coverage   Hint
                       -----------  --------  -----------------------  --------------
  (max_count !== golden_max_count)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                          Non-masking condition(s)      
 ---------  ---------  --------------------                -------------------------     
  Row   1:          1  (max_count !== golden_max_count)_0  -                             
  Row   2:    ***0***  (max_count !== golden_max_count)_1  -                             

----------------Focused Condition View-------------------
Line       85 Item    1  (zero !== golden_zero)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (zero !== golden_zero)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  (zero !== golden_zero)_0  -                             
  Row   2:    ***0***  (zero !== golden_zero)_1  -                             

----------------Focused Condition View-------------------
Line       90 Item    1  (local_error_count == 0)
Condition totals: 0 of 1 input term covered = 0.00%

                Input Term   Covered  Reason for no coverage   Hint
               -----------  --------  -----------------------  --------------
  (local_error_count == 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                  Non-masking condition(s)      
 ---------  ---------  --------------------        -------------------------     
  Row   1:    ***0***  (local_error_count == 0)_0  -                             
  Row   2:          1  (local_error_count == 0)_1  -                             

----------------Focused Condition View-------------------
Line       184 Item    1  (~load_n & ce)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
      load_n         Y
          ce         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  load_n_0              ce                            
  Row   2:          1  load_n_1              ce                            
  Row   3:          1  ce_0                  ~load_n                       
  Row   4:          1  ce_1                  ~load_n                       


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      2         2         0   100.00%

================================Expression Details================================

Expression Coverage for instance /counter_tb --
NOTE: The modification timestamp for source file 'counter_tb.sv' has been altered since compilation.

  File counter_tb.sv
----------------Focused Expression View-----------------
Line       68 Item    1  (golden_count_out == {4{1}})
Expression totals: 1 of 1 input term covered = 100.00%

                    Input Term   Covered  Reason for no coverage   Hint
                   -----------  --------  -----------------------  --------------
  (golden_count_out == {4{1}})         Y

     Rows:       Hits  FEC Target                      Non-masking condition(s)      
 ---------  ---------  --------------------            -------------------------     
  Row   1:          1  (golden_count_out == {4{1}})_0  -                             
  Row   2:          1  (golden_count_out == {4{1}})_1  -                             

----------------Focused Expression View-----------------
Line       69 Item    1  (golden_count_out == 0)
Expression totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (golden_count_out == 0)         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (golden_count_out == 0)_0  -                             
  Row   2:          1  (golden_count_out == 0)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      82        73         9    89.02%

================================Statement Details================================

Statement Coverage for instance /counter_tb --
NOTE: The modification timestamp for source file 'counter_tb.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File counter_tb.sv
    5                                                module counter_tb;
    6                                                    // TESTBENCH VARIABLES
    7                                                    int local_error_count = 0;
    8                                                    int error_count = 0;
    9                                                    int pass_count  = 0;
    10                                               
    11                                                   // DUT
    12                                                   logic clk;
    13                                                   logic rst_n; 
    14                                                   logic load_n; 
    15                                                   logic up_down; 
    16                                                   logic ce;
    17                                                   logic [WIDTH - 1:0] data_load;
    18                                                   logic [WIDTH - 1:0] count_out;
    19                                                   logic max_count;
    20                                                   logic zero;
    21                                               
    22                                                   // GOLDEN MODEL 
    23                                                   logic [WIDTH - 1:0] golden_count_out;
    24                                                   logic golden_max_count;
    25                                                   logic golden_zero;
    26                                               
    27                                                   counter #(.WIDTH(WIDTH)) DUT (
    28                                                       .clk(clk),
    29                                                       .rst_n(rst_n),
    30                                                       .load_n(load_n),
    31                                                       .up_down(up_down),
    32                                                       .ce(ce),
    33                                                       .data_load(data_load),
    34                                                       .count_out(count_out),
    35                                                       .max_count(max_count),
    36                                                       .zero(zero)
    37                                                   );
    38                                               
    39                                                   counter_txn txn;
    40                                               
    41              1                        203         always #5 clk = ~clk;
    41              2                        202     
    42                                               
    43                                                   task wait_cycles(input int num_cycles);
    44              1                        101             repeat (num_cycles) @(negedge clk);
    44              2                        101     
    45                                                   endtask
    46                                               
    47                                                   task assert_reset();
    48              1                          1             rst_n = 0;
    49                                                   endtask
    50                                               
    51                                                   task deassert_reset();
    52              1                          1             rst_n = 1;
    53                                                   endtask
    54                                               
    55                                               
    56                                                   task golden_model();
    57                                                       if (!rst_n) begin
    58              1                         11                 golden_count_out = 0;
    59                                                       end else if (!load_n) begin
    60              1                         14                 golden_count_out = data_load;
    61                                                       end else if (ce) begin
    62                                                           if (up_down) begin
    63              1                          5                     golden_count_out = golden_count_out + 1;
    64                                                           end else begin
    65              1                          6                     golden_count_out = golden_count_out - 1;
    66                                                           end
    67                                                       end
    68              1                        101             golden_max_count = (golden_count_out == {WIDTH{1'b1}});
    69              1                        101             golden_zero = (golden_count_out == 0);
    70                                                   endtask
    71                                               
    72                                                   task check_result();
    73              1                         92             local_error_count = 0;
    74                                               
    75                                                       if (count_out !== golden_count_out) begin
    76              1                    ***0***                 $error("[ERROR] count_out mismatch. Expected: %0d, Got: %0d", golden_count_out, count_out);
    77              1                    ***0***                 local_error_count++;
    78                                                       end
    79                                               
    80                                                       if (max_count !== golden_max_count) begin
    81              1                    ***0***                 $error("[ERROR] max_count mismatch. Expected: %b, Got: %b", golden_max_count, max_count);
    82              1                    ***0***                 local_error_count++;
    83                                                       end
    84                                               
    85                                                       if (zero !== golden_zero) begin
    86              1                    ***0***                 $error("[ERROR] zero mismatch. Expected: %b, Got: %b", golden_zero, zero);
    87              1                    ***0***                 local_error_count++;
    88                                                       end
    89                                               
    90                                                       if (local_error_count == 0) begin
    91              1                         92                 pass_count++;
    92              1                         92                 $display("[PASS] Outputs match expected values.");
    93                                                       end else begin
    94              1                    ***0***                 error_count++;
    95              1                    ***0***                 $display("[FAIL] Total mismatches in this check: %0d", local_error_count);
    96                                                       end
    97                                                   endtask
    98                                               
    99                                               
    100                                                  initial begin
    101             1                          1             $display("Starting counter testbench...");
    102             1                          1             clk = 0;
    103             1                          1             txn = new();
    104                                              
    105                                                      // COUNTER1
    106             1                          1             $display("\nCOUNTER1\n");
    107             1                          1             assert_reset();
    108             1                          1             golden_model();
    109             1                          1             wait_cycles(1);
    110             1                          1             deassert_reset();
    111             1                          1             check_result();
    112                                              
    113                                                      // COUNTER2
    114             1                          1             $display("\nCOUNTER2\n");
    115             1                         10             repeat (10) begin
    116                                                          assert (txn.randomize(load_n, data_load));
    117             1                         10                 drive_inputs();
    118             1                         10                 golden_model();
    119             1                         10                 wait_cycles(1);
    120                                                          if (~load_n) begin
    121             1                          8                     check_result();
    122                                                          end
    123                                                      end
    124             1                          1             txn.reset();
    125                                              
    126                                                      // COUNTER3 & COUNTER4
    127             1                          1             $display("\nCOUNTER3 & COUNTER4\n");
    128             1                         10             repeat (10) begin
    129                                                          assert (txn.randomize(ce, up_down));
    130             1                         10                 drive_inputs();
    131             1                         10                 golden_model();
    132             1                         10                 wait_cycles(1);
    133                                                          if (ce) begin
    134             1                          8                     check_result();
    135                                                          end
    136                                                      end
    137             1                          1             txn.reset();
    138                                              
    139                                                      // COUNTER5
    140             1                          1             $display("\nCOUNTER5\n");
    141             1                         10             repeat (10) begin
    142                                                          assert (txn.randomize(up_down));
    143             1                         10                 drive_inputs();  
    144             1                         10                 golden_model();
    145             1                         10                 wait_cycles(1);
    146             1                         10                 check_result();
    147                                                      end
    148             1                          1             txn.reset();
    149                                              
    150                                                      // COUNTER6 & COUNTER7
    151             1                          1             $display("\nCOUNTER6 & COUNTER7\n");
    152             1                         50             repeat (50) begin
    153                                                          assert (txn.randomize(ce, up_down));
    154             1                         50                 drive_inputs();
    155             1                         50                 golden_model();
    156             1                         50                 wait_cycles(1);
    157                                                          if (max_count) begin
    158             1                    ***0***                     check_result();
    159                                                          end
    160                                                          if (zero) begin
    161             1                         50                     check_result();
    162                                                          end
    163                                                      end
    164             1                          1             txn.reset();
    165                                              
    166                                                      // COUNTER8 
    167             1                          1             $display("\nCOUNTER8\n");    
    168             1                         10             repeat (10) begin
    169                                                          assert (txn.randomize());
    170             1                         10                 drive_inputs();
    171             1                         10                 golden_model();
    172             1                         10                 wait_cycles(1);
    173             1                         10                 check_result();
    174                                                      end
    175             1                          1             txn.reset();
    176                                              
    177                                                      // COUNTER9
    178             1                          1             $display("\nCOUNTER9\n");
    179             1                         10             repeat (10) begin
    180                                                          assert (txn.randomize(load_n, ce));
    181             1                         10                 drive_inputs();
    182             1                         10                 golden_model();
    183             1                         10                 wait_cycles(1);
    184                                                          if (~load_n & ce) begin
    185             1                          5                     check_result();
    186                                                          end
    187                                                      end
    188                                              
    189                                                      // Display completion message
    190             1                          1             $display("Simulation Completed: %0d test cases executed.", pass_count + error_count);
    191             1                          1             $display("Test Summary: Passed = %0d, Failed = %0d", pass_count, error_count);
    192             1                          1             $stop;
    193                                                  end
    194                                                  
    195                                                  task drive_inputs();
    196             1                        100             rst_n     = txn.rst_n;
    197             1                        100             load_n    = txn.load_n;
    198             1                        100             ce        = txn.ce;
    199             1                        100             up_down   = txn.up_down;
    200             1                        100             data_load = txn.data_load;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        234        54       180    23.07%

================================Toggle Details================================

Toggle Coverage for instance /counter_tb --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                                ce           1           1      100.00 
                                               clk           1           1      100.00 
                                    count_out[0-3]           1           1      100.00 
                                    data_load[0-3]           1           1      100.00 
                                 error_count[0-31]           0           0        0.00 
                             golden_count_out[0-3]           1           1      100.00 
                                  golden_max_count           1           1      100.00 
                                       golden_zero           1           1      100.00 
                                            load_n           1           1      100.00 
                           local_error_count[0-31]           0           0        0.00 
                                         max_count           1           1      100.00 
                                   pass_count[0-5]           1           1      100.00 
                                     pass_count[6]           0           1       50.00 
                                  pass_count[7-31]           0           0        0.00 
                                             rst_n           0           1       50.00 
                                           up_down           1           1      100.00 
                                              zero           1           1      100.00 

Total Node Count     =        117 
Toggled Node Count   =         26 
Untoggled Node Count =         91 

Toggle Coverage      =      23.07% (54 of 234 bins)


ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/counter_tb/#ublk#95084642#115/immed__116
                     counter_tb.sv(116)                 0          1
/counter_tb/#ublk#95084642#128/immed__129
                     counter_tb.sv(129)                 0          1
/counter_tb/#ublk#95084642#141/immed__142
                     counter_tb.sv(142)                 0          1
/counter_tb/#ublk#95084642#152/immed__153
                     counter_tb.sv(153)                 0          1
/counter_tb/#ublk#95084642#168/immed__169
                     counter_tb.sv(169)                 0          1
/counter_tb/#ublk#95084642#179/immed__180
                     counter_tb.sv(180)                 0          1

Total Coverage By Instance (filtered view): 75.61%

